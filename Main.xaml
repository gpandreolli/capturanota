<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1064,6294" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="69">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="852,6229" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="ExtractDataTable">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">new System.Data.DataTable();</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="connSQLServer" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Pick DisplayName="Pick - Abrir Navegador" sap:VirtualizedContainerService.HintSize="790,52" sap2010:WorkflowViewState.IdRef="Pick_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <PickBranch sap:VirtualizedContainerService.HintSize="534,957" sap2010:WorkflowViewState.IdRef="PickBranch_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <PickBranch.Trigger>
          <Sequence sap:VirtualizedContainerService.HintSize="450,365" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:UiElement" Name="founElement" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:WaitUiElementAppear WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'botão  Firefox View'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1">
              <ui:WaitUiElementAppear.FoundElement>
                <OutArgument x:TypeArguments="ui:UiElement">
                  <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">founElement</CSharpReference>
                </OutArgument>
              </ui:WaitUiElementAppear.FoundElement>
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5a38fc19-4b42-4804-b64a-3f4f1aae1459" InformativeScreenshot="60168c95465aaef8b2859fce2b4ded72" Selector="&lt;wnd app='firefox.exe' cls='MozillaWindowClass' omit:title='Google — Mozilla Firefox' /&gt;&lt;uia automationid='TabsToolbar' name='Abas do navegador' role='barra de ferramentas' /&gt;&lt;uia automationid='firefox-view-button' name='Firefox View' role='botão' /&gt;" TimeoutMS="3000">
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">founElement.ToString()</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
          </Sequence>
        </PickBranch.Trigger>
        <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Firefox" DisplayName="Attach Browser 'firefox.exe Nota'" sap:VirtualizedContainerService.HintSize="484,393" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="2f4f65fee6291b585a14f64f5242f032" Selector="&lt;html app='firefox.exe' omit:title='Google' /&gt;">
          <ui:BrowserScope.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Fazer" sap:VirtualizedContainerService.HintSize="450,246" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'editar Pesquise'" EmptyField="True" sap:VirtualizedContainerService.HintSize="338,135.33333333333334" sap2010:WorkflowViewState.IdRef="TypeInto_1">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6995afdd-96bd-4e19-8595-3753236a1e3d" InformativeScreenshot="c66241e5212a40565c77b3d8de02f495" Selector="&lt;wnd app='firefox.exe' cls='MozillaWindowClass' omit:title='Nota Paraná - CPF na nota é dinheiro de volta — Mozilla Firefox' /&gt;&lt;uia automationid='nav-bar' name='Navegação' role='barra de ferramentas' /&gt;&lt;uia role='caixa de combinação' /&gt;&lt;uia automationid='urlbar-input' omit:name='Pesquise com Google ou digite um endereço' role='editar' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:TypeInto.Target>
                  <ui:TypeInto.Text>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"https://www.notaparana.pr.gov.br/"+"[k(enter)]"</CSharpValue>
                    </InArgument>
                  </ui:TypeInto.Text>
                </ui:TypeInto>
              </Sequence>
            </ActivityAction>
          </ui:BrowserScope.Body>
        </ui:BrowserScope>
      </PickBranch>
      <PickBranch sap:VirtualizedContainerService.HintSize="534,957" sap2010:WorkflowViewState.IdRef="PickBranch_2">
        <PickBranch.Trigger>
          <Sequence sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:UiElement" Name="encontrouNavegador" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </PickBranch.Trigger>
        <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Firefox" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="484,205" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" Url="https://www.notaparana.pr.gov.br/">
          <ui:OpenBrowser.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Fazer" sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </ActivityAction>
          </ui:OpenBrowser.Body>
        </ui:OpenBrowser>
      </PickBranch>
    </Pick>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Firefox" DisplayName="Attach Browser 'firefox.exe Nota'" sap:VirtualizedContainerService.HintSize="790,6026" sap2010:WorkflowViewState.IdRef="BrowserScope_2" InformativeScreenshot="541b143f7e6f5401b9bfc37e38e75d6e" Selector="&lt;html app='firefox.exe' title='Nota Paraná - CPF na nota é dinheiro de volta' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Fazer - Attach Browser" sap:VirtualizedContainerService.HintSize="756,5879" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="indexNotas" />
              <Variable x:TypeArguments="x:String" Name="strIdEstabelecimento" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="listaUnidades" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  acessar-meus-cr...'" sap:VirtualizedContainerService.HintSize="694,107" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f345e3e7-08f7-4771-a166-178da33ef36d" InformativeScreenshot="e84ccae9e0168b1e0e862e72fb5c88fb" Selector="&lt;webctrl id='acessar-meus-creditos' tag='BUTTON' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  attribute'" EmptyField="True" sap:VirtualizedContainerService.HintSize="694,135" sap2010:WorkflowViewState.IdRef="TypeInto_2">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b20472c1-d92c-442d-850c-71d01ac6fc1b" InformativeScreenshot="a6a123a82f60a3bf464e4afaf06580b9" Selector="&lt;webctrl id='attribute' tag='INPUT' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:TypeInto.Target>
              <ui:TypeInto.Text>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:TypeInto.Text>
            </ui:TypeInto>
            <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  password'" EmptyField="True" sap:VirtualizedContainerService.HintSize="694,135" sap2010:WorkflowViewState.IdRef="TypeInto_3">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="92c58d3b-cd43-4d9a-863b-bf6ad43df8df" InformativeScreenshot="a44398828361a391055aac6a9f786db3" Selector="&lt;webctrl id='password' tag='INPUT' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:TypeInto.Target>
              <ui:TypeInto.Text>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:TypeInto.Text>
            </ui:TypeInto>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'INPUT'" sap:VirtualizedContainerService.HintSize="694,107" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7cc81dd3-306d-4cf4-9a60-22c4206f29d5" InformativeScreenshot="821def0f38605954436e5389ed35f671" Selector="&lt;webctrl tag='INPUT' type='submit' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'A  /nfprweb/Extrato'" sap:VirtualizedContainerService.HintSize="694,107" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="aae06a08-46dc-40c9-b1f6-80a2e02f9620" InformativeScreenshot="51fc0876c1d7cbe4c4cfd1f6f5aeba4a" Selector="&lt;webctrl parentid='main' tag='A' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Browser Firefox: Nota Paraná - CPF na nota é dinheiro de volta." sap:VirtualizedContainerService.HintSize="694,491" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="Simulate" ScopeGuid="e40e405d-d012-4dbe-9a5d-0c3e1844206b" Version="V2">
              <uix:NApplicationCard.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Fazer" sap:VirtualizedContainerService.HintSize="450,273" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uix:NExtractData AppendResults="False" ContinueOnError="True" DisplayName="Extract Table Data" ExtractDataSettings="&lt;Table xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' Type='Table'&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='CNPJ' ReferenceName='CNPJ' ReferenceIdx='0'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Estabelecimento Comercial' ReferenceName='Estabelecimento Comercial' ReferenceIdx='1'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Nota' ReferenceName='Nota' ReferenceIdx='2'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' IsDeleted='true' Name='Nota Url' ReferenceName='Nota Url' ReferenceIdx='3'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Data de emissão' ReferenceName='Data de emissão' ReferenceIdx='4'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Valor' ReferenceName='Valor' ReferenceIdx='5'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Crédito' ReferenceName='Crédito' ReferenceIdx='6'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Situação do crédito' ReferenceName='Situação do crédito' ReferenceIdx='7'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Rejeitar' ReferenceName='Rejeitar' ReferenceIdx='8'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' IsDeleted='true' Name='Rejeitar Url' ReferenceName='Rejeitar Url' ReferenceIdx='9'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&lt;/Table&gt;" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest'&gt;&lt;column name='CNPJ' attr='text' /&gt;&lt;column name='Estabelecimento Comercial' attr='text' /&gt;&lt;column name='Nota' attr='text' name2='Nota Url' attr2='href' /&gt;&lt;column name='Data de emissão' attr='text' /&gt;&lt;column name='Valor' attr='text' /&gt;&lt;column name='Crédito' attr='text' /&gt;&lt;column name='Situação do crédito' attr='text' /&gt;&lt;column name='Rejeitar' attr='text' name2='Rejeitar Url' attr2='href' /&gt;&lt;/extract-table&gt;" sap:VirtualizedContainerService.HintSize="388,158" sap2010:WorkflowViewState.IdRef="NExtractData_1" LimitExtractionTo="None" MaximumResults="0" ScopeIdentifier="e40e405d-d012-4dbe-9a5d-0c3e1844206b" Version="V3">
                      <uix:NExtractData.DataTable>
                        <InOutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">ExtractDataTable</CSharpReference>
                        </InOutArgument>
                      </uix:NExtractData.DataTable>
                      <uix:NExtractData.Target>
                        <uix:TargetAnchorable DesignTimeRectangle="118, 456, 1666, 581" DesignTimeScaleFactor="1.5" FriendlyName="'CNPJ Estabelecimento'" FullSelectorArgument="&lt;webctrl id='notasId' tag='TABLE' /&gt;" Guid="acfcc0ff-4bbc-470e-b29f-342033caaf29" InformativeScreenshot="fe83bcfba28a8b4e1ea0baf84fcc6065.png" ScopeSelectorArgument="&lt;html app='firefox.exe' title='Nota Paraná - CPF na nota é dinheiro de volta.' /&gt;" SearchSteps="Selector" Version="V1" Visibility="Interactive" />
                      </uix:NExtractData.Target>
                    </uix:NExtractData>
                  </Sequence>
                </ActivityAction>
              </uix:NApplicationCard.Body>
              <uix:NApplicationCard.TargetApp>
                <uix:TargetApp Area="-11, -11, 1942, 1042" BrowserType="Firefox" IconBase64="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"b09c26e18355da465db5f21604597cc8.png" Selector="&lt;html app='firefox.exe' title='Nota Paraná - CPF na nota é dinheiro de volta.' /&gt;" Url="https://notaparana.pr.gov.br/nfprweb/Extrato" />
              </uix:NApplicationCard.TargetApp>
            </uix:NApplicationCard>
            <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="694,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="Microsoft.Data.SqlClient" ConnectionString="Data Source=NOTE-DELL\SQLEXPRESS;Initial Catalog=DB;User ID=gpaJava2;Password=#*Gpa123;Encrypt=False">
              <ui:DatabaseConnect.DatabaseConnection>
                <OutArgument x:TypeArguments="ui:DatabaseConnection">
                  <CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">connSQLServer</CSharpReference>
                </OutArgument>
              </ui:DatabaseConnect.DatabaseConnection>
            </ui:DatabaseConnect>
            <ui:ForEachRow ColumnNames="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="694,4346" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Nota" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Corpo - For Tabela de Notas" sap:VirtualizedContainerService.HintSize="660,4230" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="bolExisteNota" />
                      <Variable x:TypeArguments="x:Int32" Name="indexWhile" />
                      <Variable x:TypeArguments="x:Int32" Name="boolExisteEstab" />
                      <Variable x:TypeArguments="x:Int32" Name="intNumNota" />
                      <Variable x:TypeArguments="x:Int64" Name="intCnpj" />
                      <Variable x:TypeArguments="x:String" Name="strCnpj" />
                      <Variable x:TypeArguments="x:String" Name="strSqlNota" />
                      <Variable x:TypeArguments="x:Int32" Name="BOO" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dtEstabelecimento" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="listaNomes" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="listaQtdes" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="listaCodigos" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="listaVlrUnit" />
                      <Variable x:TypeArguments="x:String" Name="strIdNota" />
                      <Variable x:TypeArguments="x:String" Name="strItensNota" />
                      <Variable x:TypeArguments="x:String" Name="valorTotalNota" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dtNota" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="598,110" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">"Colentando dados da Nota N° "+Nota[2] + " do estabelecimento: "+Nota[1]+ " emitida em "+Nota[3]</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="598,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">intNumNota</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">
                                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">Convert.ToInt32(Nota[2])</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">strCnpj</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">Nota[0].ToString().Replace(".","").Replace("-","").Replace("/","")</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int64">
                                <CSharpReference x:TypeArguments="x:Int64" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">intCnpj</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int64">
                                <CSharpValue x:TypeArguments="x:Int64" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">Convert.ToInt64(strCnpj)</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">valorTotalNota</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">Nota[4].ToString().Replace(".","").Replace(",",".").Replace("R$","").TrimStart().TrimEnd()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="598,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1">
                      <ui:ExecuteQuery.DataTable>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">dtEstabelecimento</CSharpReference>
                        </OutArgument>
                      </ui:ExecuteQuery.DataTable>
                      <ui:ExecuteQuery.ExistingDbConnection>
                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                          <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">connSQLServer</CSharpValue>
                        </InArgument>
                      </ui:ExecuteQuery.ExistingDbConnection>
                      <ui:ExecuteQuery.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:ExecuteQuery.Parameters>
                      <ui:ExecuteQuery.Sql>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">"SELECT ID FROM ESTABELECIMENTO WHERE CNPJ = "+strCnpj</CSharpValue>
                        </InArgument>
                      </ui:ExecuteQuery.Sql>
                    </ui:ExecuteQuery>
                    <If sap2010:Annotation.AnnotationText="verifica se o estabelecimento ja existe&#xA;" sap:VirtualizedContainerService.HintSize="598,113" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">dtEstabelecimento.Rows.Count == 1</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,171" sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">strIdEstabelecimento</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">dtEstabelecimento.Rows[0].ItemArray[0].ToString()</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,429" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run command" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_6">
                            <ui:ExecuteNonQuery.ExistingDbConnection>
                              <InArgument x:TypeArguments="ui:DatabaseConnection">
                                <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">connSQLServer</CSharpValue>
                              </InArgument>
                            </ui:ExecuteNonQuery.ExistingDbConnection>
                            <ui:ExecuteNonQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteNonQuery.Parameters>
                            <ui:ExecuteNonQuery.Sql>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">"INSERT INTO ESTABELECIMENTO (CNPJ,RAZAO_SOCIAL) VALUES('"+strCnpj+"', '"+Nota[1].ToString()+"')"</CSharpValue>
                              </InArgument>
                            </ui:ExecuteNonQuery.Sql>
                          </ui:ExecuteNonQuery>
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2">
                            <ui:ExecuteQuery.DataTable>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">dtEstabelecimento</CSharpReference>
                              </OutArgument>
                            </ui:ExecuteQuery.DataTable>
                            <ui:ExecuteQuery.ExistingDbConnection>
                              <InArgument x:TypeArguments="ui:DatabaseConnection">
                                <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">connSQLServer</CSharpValue>
                              </InArgument>
                            </ui:ExecuteQuery.ExistingDbConnection>
                            <ui:ExecuteQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteQuery.Parameters>
                            <ui:ExecuteQuery.Sql>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">"SELECT ID FROM ESTABELECIMENTO WHERE CNPJ = "+strCnpj</CSharpValue>
                              </InArgument>
                            </ui:ExecuteQuery.Sql>
                          </ui:ExecuteQuery>
                          <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">strIdEstabelecimento</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">dtEstabelecimento.Rows[0].ItemArray[0].ToString()</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="598,83" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">strSqlNota</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">"SELECT N.ID FROM NOTA N INNER JOIN ESTABELECIMENTO E ON E.ID = N.ID_ESTABELECIMENTO WHERE E.CNPJ ="+ strCnpj +" AND N.NUM_NOTA =" + Nota[2].ToString().TrimStart().TrimEnd()</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="598,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7">
                      <ui:ExecuteQuery.DataTable>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">dtNota</CSharpReference>
                        </OutArgument>
                      </ui:ExecuteQuery.DataTable>
                      <ui:ExecuteQuery.ExistingDbConnection>
                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                          <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">connSQLServer</CSharpValue>
                        </InArgument>
                      </ui:ExecuteQuery.ExistingDbConnection>
                      <ui:ExecuteQuery.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:ExecuteQuery.Parameters>
                      <ui:ExecuteQuery.Sql>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">strSqlNota</CSharpValue>
                        </InArgument>
                      </ui:ExecuteQuery.Sql>
                    </ui:ExecuteQuery>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="598,53" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Atividades Ignoradas" sap:VirtualizedContainerService.HintSize="496,194" sap2010:WorkflowViewState.IdRef="Sequence_35">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">bolExisteNota</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <If sap:VirtualizedContainerService.HintSize="598,3108" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">dtNota.Rows.Count == 1</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">"Nota Ja cadastrada no banco de dados"</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="564,2759" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="dtNota" />
                            <Variable x:TypeArguments="x:Int32" Name="indexProdutos" />
                            <Variable x:TypeArguments="x:String" Name="sqlInsertNota" />
                            <Variable x:TypeArguments="x:String" Name="doubleValorTotal" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="522,83" sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">sqlInsertNota</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">"INSERT INTO NOTA (DATA_EMISSAO,NUM_NOTA,VALOR_TOTAL,ID_ESTABELECIMENTO) VALUES('"+Nota[3]+"',"+Nota[2]+","+valorTotalNota+","+strIdEstabelecimento+")"</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run command" sap:VirtualizedContainerService.HintSize="522,89" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_7">
                            <ui:ExecuteNonQuery.ExistingDbConnection>
                              <InArgument x:TypeArguments="ui:DatabaseConnection">
                                <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">connSQLServer</CSharpValue>
                              </InArgument>
                            </ui:ExecuteNonQuery.ExistingDbConnection>
                            <ui:ExecuteNonQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteNonQuery.Parameters>
                            <ui:ExecuteNonQuery.Sql>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">sqlInsertNota</CSharpValue>
                              </InArgument>
                            </ui:ExecuteNonQuery.Sql>
                          </ui:ExecuteNonQuery>
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="522,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3">
                            <ui:ExecuteQuery.DataTable>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">dtNota</CSharpReference>
                              </OutArgument>
                            </ui:ExecuteQuery.DataTable>
                            <ui:ExecuteQuery.ExistingDbConnection>
                              <InArgument x:TypeArguments="ui:DatabaseConnection">
                                <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">connSQLServer</CSharpValue>
                              </InArgument>
                            </ui:ExecuteQuery.ExistingDbConnection>
                            <ui:ExecuteQuery.Parameters>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:ExecuteQuery.Parameters>
                            <ui:ExecuteQuery.Sql>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">strSqlNota</CSharpValue>
                              </InArgument>
                            </ui:ExecuteQuery.Sql>
                          </ui:ExecuteQuery>
                          <Assign sap:VirtualizedContainerService.HintSize="522,83" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">strIdNota</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">dtNota.Rows[0].ItemArray[0].ToString()</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'FIELDSET'" sap:VirtualizedContainerService.HintSize="522,155" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="down" KeyModifiers="None" SpecialKey="True">
                            <ui:SendHotkey.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bc38719e-ecf1-4c1a-bfa6-ae6e5d6ac44e" InformativeScreenshot="dde1c755512b363e2c1c725ebde4ea24" Selector="&lt;webctrl parentid='notasdomes' tag='FIELDSET' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:SendHotkey.Target>
                          </ui:SendHotkey>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" CursorMotionType="Instant" DisplayName="Click 'A  /nfprweb/NotaFiscalH...'" sap:VirtualizedContainerService.HintSize="522,107" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="39ba32bf-1ecf-479c-a9ec-6e5fef26320f" InformativeScreenshot="dedbcf40e6102fe885061a7e5a6de360">
                                <ui:Target.Selector>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">"&lt;html app='firefox.exe' title='Nota Paraná - CPF na nota é dinheiro de volta.' /&gt;&lt;webctrl id='notasId' tag='TABLE' /&gt;&lt;webctrl tableRow='"+(indexNotas + 2)+"' colName='Nota' idx='2' /&gt;"</CSharpValue>
                                  </InArgument>
                                </ui:Target.Selector>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                          <Delay sap:VirtualizedContainerService.HintSize="522,91" sap2010:WorkflowViewState.IdRef="Delay_1">
                            <InArgument x:TypeArguments="x:TimeSpan">
                              <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">new TimeSpan(0, 0, 5)</CSharpValue>
                            </InArgument>
                          </Delay>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="522,1103" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" UiBrowser="{x:Null}" BrowserType="Firefox" DisplayName="Attach Browser 'firefox.exe Completa'" sap:VirtualizedContainerService.HintSize="484,870" sap2010:WorkflowViewState.IdRef="BrowserScope_3" InformativeScreenshot="f730d1aa501aaecbed3f9fd669ab40ad" Selector="&lt;html app='firefox.exe' title='Completa | Imprimir DOCUMENTO AUXILIAR DA NOTA FISCAL DE CONSUMIDOR ELETRÔNICA' /&gt;" TimeoutMS="3000">
                                <ui:BrowserScope.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Fazer" sap:VirtualizedContainerService.HintSize="450,723" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:GetFullText IgnoreHidden="{x:Null}" DisplayName="Get Full Text 'DIV  conteudo'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="GetFullText_2">
                                        <ui:GetFullText.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="609c3846-3861-42d2-99e5-bef059ad2d60" InformativeScreenshot="fee1dc3789a4dc6a937429360a9c0dc8" Selector="&lt;webctrl id='conteudo' tag='DIV' /&gt;" TimeoutMS="3000">
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:GetFullText.Target>
                                        <ui:GetFullText.Text>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">strItensNota</CSharpReference>
                                          </OutArgument>
                                        </ui:GetFullText.Text>
                                      </ui:GetFullText>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,110" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
                                        <ui:LogMessage.Message>
                                          <InArgument x:TypeArguments="x:Object">
                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">strItensNota</CSharpValue>
                                          </InArgument>
                                        </ui:LogMessage.Message>
                                      </ui:LogMessage>
                                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="String[] texto = in_strItemNota.Split(&quot;Clear text&quot;);&#xA;&#x9;&#xA;List&lt;String&gt; listaNomes = new List&lt;String&gt;();&#xA;List&lt;String&gt; listaCodigos = new List&lt;String&gt;();&#xA;List&lt;String&gt; listaQtdes = new List&lt;String&gt;();&#xA;List&lt;String&gt; listaUnidades = new List&lt;String&gt;();&#xA;List&lt;String&gt; listaVlrUnit = new List&lt;String&gt;();&#xA;&#xA;String[] itens  = texto[1].Split(&quot;Vl. Total&quot;);&#xA;&#xA; int qtdeItens = itens.Length -1;&#xA;Console.WriteLine(&quot;Tamanho do Array: &quot;+qtdeItens.ToString());&#xA;&#xA;for (int i = 0; i &lt; qtdeItens; i++)&#xA;{&#xA;  int indexCodigo =   itens[i].IndexOf(&quot;(Código:&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;////----------*******nome***---------------//&#xA;&#x9;&#x9;string nome = itens[i].Substring(0,indexCodigo);&#xA;&#x9;&#x9;nome = nome.TrimStart().TrimEnd();&#xA;&#x9;&#x9;if(i &gt;0){&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;entrou no if i &gt;0 &quot;+i);&#xA;&#x9;&#x9;&#x9;nome = nome.Substring(5,(nome.Length-5));&#xA;&#x9;&#x9;}&#x9;&#xA;&#x9;&#x9;listaNomes.Add(nome);&#xA;&#x9;&#xA;&#x9;//----------*******qtde***---------------//&#xA;&#x9; String[] qtdes = itens[i].Split(&quot;Qtde.:&quot;);&#xA;&#x9;int indexQtde = qtdes[1].IndexOf(&quot;UN:&quot;);&#xA;&#x9;Console.WriteLine(&quot;indexQtde: &quot;+indexQtde);&#xA;&#x9;String qtde = qtdes[1].Substring(0,indexQtde);&#xA;&#x9;Console.WriteLine(qtde);&#xA;&#x9;listaQtdes.Add(qtde);&#xA;&#xA;&#x9;&#xA;&#x9;//----------------***Codigo***------------//&#xA;&#x9;String[] codigos = itens[i].Split(&quot;(Código:&quot;);&#xA;&#x9;int indexCod = codigos[1].IndexOf(&quot;)&quot;);&#xA;&#x9;string codigo = codigos[1].Substring(0,indexCod);&#xA;&#x9;listaCodigos.Add(codigo);&#xA;&#x9;&#xA;&#x9;&#xA;&#x9; //----------------***Unidade***------------//&#xA;&#x9; String[] unidades = itens[i].Split(&quot;UN:&quot;);&#xA;&#x9; int indexUnid = unidades[1].IndexOf(&quot;Vl.&quot;);&#xA;&#x9; string unidade = unidades[1].Substring(0,indexUnid).TrimStart().TrimEnd();&#xA;&#x9; listaUnidades.Add(unidade);&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; String[] valoresUnits = itens[i].Split(&quot;Vl. Unit.:&quot;);&#xA;&#x9; string vlUnit = valoresUnits[1].TrimStart().TrimEnd();&#xA;&#x9; listaVlrUnit.Add(vlUnit);&#xA;&#x9; &#xA;&#x9; Console.WriteLine(&quot;indexCodigo: &quot;+indexCodigo+&quot; | codigo: &quot;+codigo+&quot; | Nome Produto: &quot;+nome+&quot; | qtde: &quot;+qtde+ &quot; | Un.&quot;+unidade+&quot; | Vl.Unit: &quot;+vlUnit);&#xA;&#x9; Console.WriteLine(&quot;index do For:&quot; +i);&#xA;}&#xA;&#xA;out_listaNomes = listaNomes;&#xA;out_listaQtdes = listaQtdes;&#xA;out_listaCodigos = listaCodigos;&#xA;out_listaUnidades = listaUnidades;&#xA;out_listaVlrUnit = listaVlrUnit;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="388,165" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                                        <ui:InvokeCode.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_strItemNota">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">strItensNota</CSharpValue>
                                          </InArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_listaNomes">
                                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">listaNomes</CSharpReference>
                                          </OutArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_listaQtdes">
                                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">listaQtdes</CSharpReference>
                                          </OutArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_listaCodigos">
                                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">listaCodigos</CSharpReference>
                                          </OutArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_listaUnidades">
                                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">listaUnidades</CSharpReference>
                                          </OutArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_listaVlrUnit">
                                            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">listaVlrUnit</CSharpReference>
                                          </OutArgument>
                                        </ui:InvokeCode.Arguments>
                                      </ui:InvokeCode>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,110" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info">
                                        <ui:LogMessage.Message>
                                          <InArgument x:TypeArguments="x:Object">
                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">listaNomes[0].ToString() +" "+ listaCodigos[0]+" "+listaQtdes[0]+" "+listaVlrUnit[0]</CSharpValue>
                                          </InArgument>
                                        </ui:LogMessage.Message>
                                      </ui:LogMessage>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:BrowserScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:BrowserScope>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="488,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap:VirtualizedContainerService.HintSize="450,416" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,110" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">"Não foi possivel Obter os dados da nota "</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'MozillaCompositorWindow...'" sap:VirtualizedContainerService.HintSize="388,155" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="f4" KeyModifiers="Ctrl" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fbb53f7e-cd6d-413d-b203-d6ddc891c515" InformativeScreenshot="39b8041d123497093c82c2894283c57d" Selector="&lt;wnd app='firefox.exe' cls='MozillaWindowClass' title='DF-e Portal/Pr - Consulta Completa NF-e — Mozilla Firefox' /&gt;&lt;wnd cls='MozillaCompositorWindowClass' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="522,551" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence sap:VirtualizedContainerService.HintSize="548,412" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ForEach x:TypeArguments="x:Object" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="486,208" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="strCodigoProduto" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Corpo" sap:VirtualizedContainerService.HintSize="450,83" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:Int32" Name="boolExisteProduto" />
                                          <Variable x:TypeArguments="sd:DataTable" Name="dtProduto" />
                                          <Variable x:TypeArguments="x:String" Name="sqlInsertItemNota" />
                                          <Variable x:TypeArguments="x:String" Name="strIdProduto" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="586,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5">
                                          <ui:ExecuteQuery.DataTable>
                                            <OutArgument x:TypeArguments="sd:DataTable">
                                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">dtProduto</CSharpReference>
                                            </OutArgument>
                                          </ui:ExecuteQuery.DataTable>
                                          <ui:ExecuteQuery.ExistingDbConnection>
                                            <InArgument x:TypeArguments="ui:DatabaseConnection">
                                              <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">connSQLServer</CSharpValue>
                                            </InArgument>
                                          </ui:ExecuteQuery.ExistingDbConnection>
                                          <ui:ExecuteQuery.Parameters>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:ExecuteQuery.Parameters>
                                          <ui:ExecuteQuery.Sql>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">"SELECT ID FROM PRODUTO WHERE COD_PROD_EST = " + strCodigoProduto +"AND ID_ESTABELECIMENTO ="+ strIdEstabelecimento</CSharpValue>
                                            </InArgument>
                                          </ui:ExecuteQuery.Sql>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExecuteQuery>
                                        <If sap:VirtualizedContainerService.HintSize="586,3360" sap2010:WorkflowViewState.IdRef="If_3">
                                          <If.Condition>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">dtProduto.Rows.Count == 1</CSharpValue>
                                            </InArgument>
                                          </If.Condition>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476,1252" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:Int32" Name="intInseriuItemNota" />
                                                <Variable x:TypeArguments="x:String" Name="strVlrUnit" />
                                                <Variable x:TypeArguments="x:String" Name="strQtde" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">strIdProduto</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">dtProduto.Rows[0].ItemArray[0].ToString()</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">strVlrUnit</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">listaVlrUnit[indexProdutos].ToString().Replace(",",".")</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_15">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">strQtde</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">listaQtdes[indexProdutos].ToString().Replace(",",".")</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">sqlInsertItemNota</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">"INSERT INTO ITEM_NOTA (ID_PRODUTO,ID_NOTA,VALOR_UN,QTDE,VALOR_TOTAL) VALUES("+strIdProduto+","+strIdNota+","+strVlrUnit+","+strQtde+",ROUND(("+strVlrUnit+"*"+strQtde+"),2))"</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExecuteNonQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run command" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_9">
                                                <ui:ExecuteNonQuery.AffectedRecords>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">intInseriuItemNota</CSharpReference>
                                                  </OutArgument>
                                                </ui:ExecuteNonQuery.AffectedRecords>
                                                <ui:ExecuteNonQuery.ExistingDbConnection>
                                                  <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                    <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">connSQLServer</CSharpValue>
                                                  </InArgument>
                                                </ui:ExecuteNonQuery.ExistingDbConnection>
                                                <ui:ExecuteNonQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteNonQuery.Parameters>
                                                <ui:ExecuteNonQuery.Sql>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">sqlInsertItemNota</CSharpValue>
                                                  </InArgument>
                                                </ui:ExecuteNonQuery.Sql>
                                              </ui:ExecuteNonQuery>
                                              <If sap:VirtualizedContainerService.HintSize="434,547" sap2010:WorkflowViewState.IdRef="If_5">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">intInseriuItemNota &gt; 0</CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info">
                                                      <ui:LogMessage.Message>
                                                        <InArgument x:TypeArguments="x:Object">
                                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">"Inseriu item da nota"</CSharpValue>
                                                        </InArgument>
                                                      </ui:LogMessage.Message>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:LogMessage>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info">
                                                      <ui:LogMessage.Message>
                                                        <InArgument x:TypeArguments="x:Object">
                                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">"Não Inseriu item da nota"</CSharpValue>
                                                        </InArgument>
                                                      </ui:LogMessage.Message>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:LogMessage>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="552,1957" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:Int32" Name="boolInseriuProduto" />
                                                <Variable x:TypeArguments="x:String" Name="sqlInsertProduto" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">sqlInsertProduto</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">"INSERT INTO PRODUTO (NOME, COD_PROD_EST,UNID_COMERCIAL,ID_ESTABELECIMENTO) VALUES ('"+listaNomes[indexProdutos].ToString().Replace("'","").TrimStart().TrimEnd()+"',"+listaCodigos[indexProdutos].ToString()+",'"+listaUnidades[indexProdutos].ToString()+"',"+strIdEstabelecimento+")"</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExecuteNonQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run command" sap:VirtualizedContainerService.HintSize="510,89" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_10">
                                                <ui:ExecuteNonQuery.AffectedRecords>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">boolInseriuProduto</CSharpReference>
                                                  </OutArgument>
                                                </ui:ExecuteNonQuery.AffectedRecords>
                                                <ui:ExecuteNonQuery.ExistingDbConnection>
                                                  <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                    <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">connSQLServer</CSharpValue>
                                                  </InArgument>
                                                </ui:ExecuteNonQuery.ExistingDbConnection>
                                                <ui:ExecuteNonQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteNonQuery.Parameters>
                                                <ui:ExecuteNonQuery.Sql>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">sqlInsertProduto</CSharpValue>
                                                  </InArgument>
                                                </ui:ExecuteNonQuery.Sql>
                                              </ui:ExecuteNonQuery>
                                              <If sap:VirtualizedContainerService.HintSize="510,1617" sap2010:WorkflowViewState.IdRef="If_4">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">boolInseriuProduto &gt;0</CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="476,1385" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:Int32" Name="intInseriuItemNota" />
                                                      <Variable x:TypeArguments="x:String" Name="strVlrUnit" />
                                                      <Variable x:TypeArguments="x:String" Name="strQtde" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run query" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6">
                                                      <ui:ExecuteQuery.DataTable>
                                                        <OutArgument x:TypeArguments="sd:DataTable">
                                                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">dtProduto</CSharpReference>
                                                        </OutArgument>
                                                      </ui:ExecuteQuery.DataTable>
                                                      <ui:ExecuteQuery.ExistingDbConnection>
                                                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                          <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">connSQLServer</CSharpValue>
                                                        </InArgument>
                                                      </ui:ExecuteQuery.ExistingDbConnection>
                                                      <ui:ExecuteQuery.Parameters>
                                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                      </ui:ExecuteQuery.Parameters>
                                                      <ui:ExecuteQuery.Sql>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">"SELECT ID FROM PRODUTO WHERE COD_PROD_EST = " + strCodigoProduto.ToString() +"AND ID_ESTABELECIMENTO ="+ strIdEstabelecimento</CSharpValue>
                                                        </InArgument>
                                                      </ui:ExecuteQuery.Sql>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:ExecuteQuery>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">strIdProduto</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">dtProduto.Rows[0].ItemArray[0].ToString()</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">strVlrUnit</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">listaVlrUnit[indexProdutos].ToString().Replace(",",".")</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">strQtde</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">listaQtdes[indexProdutos].ToString().Replace(",",".")</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_11">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">
                                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">sqlInsertItemNota</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">"INSERT INTO ITEM_NOTA (ID_PRODUTO,ID_NOTA,VALOR_UN,QTDE,VALOR_TOTAL) VALUES("+strIdProduto+","+strIdNota+","+strVlrUnit+","+strQtde+",ROUND(("+strVlrUnit+"*"+strQtde+"),2))"</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:ExecuteNonQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Run command" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_11">
                                                      <ui:ExecuteNonQuery.AffectedRecords>
                                                        <OutArgument x:TypeArguments="x:Int32">
                                                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">intInseriuItemNota</CSharpReference>
                                                        </OutArgument>
                                                      </ui:ExecuteNonQuery.AffectedRecords>
                                                      <ui:ExecuteNonQuery.ExistingDbConnection>
                                                        <InArgument x:TypeArguments="ui:DatabaseConnection">
                                                          <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">connSQLServer</CSharpValue>
                                                        </InArgument>
                                                      </ui:ExecuteNonQuery.ExistingDbConnection>
                                                      <ui:ExecuteNonQuery.Parameters>
                                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                      </ui:ExecuteNonQuery.Parameters>
                                                      <ui:ExecuteNonQuery.Sql>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">sqlInsertItemNota</CSharpValue>
                                                        </InArgument>
                                                      </ui:ExecuteNonQuery.Sql>
                                                    </ui:ExecuteNonQuery>
                                                    <If sap:VirtualizedContainerService.HintSize="434,547" sap2010:WorkflowViewState.IdRef="If_6">
                                                      <If.Condition>
                                                        <InArgument x:TypeArguments="x:Boolean">
                                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">intInseriuItemNota &gt; 0</CSharpValue>
                                                        </InArgument>
                                                      </If.Condition>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info">
                                                            <ui:LogMessage.Message>
                                                              <InArgument x:TypeArguments="x:Object">
                                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">"Inseriu item da nota"</CSharpValue>
                                                              </InArgument>
                                                            </ui:LogMessage.Message>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:LogMessage>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info">
                                                            <ui:LogMessage.Message>
                                                              <InArgument x:TypeArguments="x:Object">
                                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">"Não Inseriu item da nota"</CSharpValue>
                                                              </InArgument>
                                                            </ui:LogMessage.Message>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:LogMessage>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="300,81" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <ui:ForEach.CurrentIndex>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">indexProdutos</CSharpReference>
                                    </OutArgument>
                                  </ui:ForEach.CurrentIndex>
                                  <ui:ForEach.Values>
                                    <InArgument x:TypeArguments="sc:IEnumerable">
                                      <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">listaCodigos</CSharpValue>
                                    </InArgument>
                                  </ui:ForEach.Values>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEach>
                                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'item de tabulação '" sap:VirtualizedContainerService.HintSize="486,53" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="f4" KeyModifiers="Ctrl" SpecialKey="True">
                                  <ui:SendHotkey.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bd359bec-733a-45e8-9340-2703954b7ab0" InformativeScreenshot="927b43266478e0ace975ff986146d764" Selector="&lt;wnd app='firefox.exe' cls='MozillaWindowClass' title='Completa | Imprimir DOCUMENTO AUXILIAR DA NOTA FISCAL DE CONSUMI*' /&gt;&lt;wnd cls='MozillaCompositorWindowClass' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:SendHotkey.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendHotkey>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="456,384" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap:VirtualizedContainerService.HintSize="450,314" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,110" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Error">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">"Não foi possivel pegar os itens da nota"</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'item de tabulação '" sap:VirtualizedContainerService.HintSize="388,53" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="f4" KeyModifiers="Ctrl" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bd359bec-733a-45e8-9340-2703954b7ab0" InformativeScreenshot="927b43266478e0ace975ff986146d764" Selector="&lt;wnd app='firefox.exe' cls='MozillaWindowClass' title='Completa | Imprimir DOCUMENTO AUXILIAR DA NOTA FISCAL DE CONSUMI*' /&gt;&lt;wnd cls='MozillaCompositorWindowClass' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:SendHotkey>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.CurrentIndex>
                <OutArgument x:TypeArguments="x:Int32">
                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">indexNotas</CSharpReference>
                </OutArgument>
              </ui:ForEachRow.CurrentIndex>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">ExtractDataTable</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
  </Sequence>
</Activity>